# Service A - Learning Copilot
server {
    server_name learning-copilot.ai-trends.io;

    location / {
        proxy_pass http://localhost:4000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;

        # Streaming/SSE settings for AI responses
        proxy_buffering off;
        proxy_cache off;
        proxy_read_timeout 3600s;
        proxy_send_timeout 3600s;
        chunked_transfer_encoding off;
        add_header Cache-Control no-cache;
        add_header X-Accel-Buffering no;
    }

    listen 443 ssl;
    ssl_certificate /etc/letsencrypt/live/learning-copilot.ai-trends.io/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/learning-copilot.ai-trends.io/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
}

# Service B - LangSmith
server {
    server_name langsmith.ai-trends.io;

    location / {
        proxy_pass http://localhost:8123;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

    listen 443 ssl;
    ssl_certificate /etc/letsencrypt/live/learning-copilot.ai-trends.io/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/learning-copilot.ai-trends.io/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
}

# Service C - MCP WhatsApp
server {
    server_name mcp-whatsapp.ai-trends.io;

    location /sse {
        proxy_pass http://localhost:8000/sse;
        proxy_http_version 1.1;
        proxy_set_header Connection '';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # SSE-specific settings
        proxy_buffering off;
        proxy_cache off;
        proxy_read_timeout 3600s;
        proxy_send_timeout 3600s;
        chunked_transfer_encoding off;
        add_header Cache-Control no-cache;
        add_header X-Accel-Buffering no;
    }

    location /messages/ {
        proxy_pass http://localhost:8000/messages/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    listen 443 ssl;
    ssl_certificate /etc/letsencrypt/live/learning-copilot.ai-trends.io/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/learning-copilot.ai-trends.io/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
}

# Service D - MCP Playwright
server {
    server_name mcp-playwright.ai-trends.io;

    # WebSocket support for Playwright
    location / {
        proxy_pass http://localhost:8931;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # WebSocket specific settings
        proxy_read_timeout 3600s;
        proxy_send_timeout 3600s;
        proxy_buffering off;
    }

    location /sse {
        proxy_pass http://localhost:8931/sse;
        proxy_http_version 1.1;
        proxy_set_header Connection '';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # SSE-specific settings
        proxy_buffering off;
        proxy_cache off;
        proxy_read_timeout 3600s;
        proxy_send_timeout 3600s;
        chunked_transfer_encoding off;
        add_header Cache-Control no-cache;
        add_header X-Accel-Buffering no;
    }

    location /messages/ {
        proxy_pass http://localhost:8931/messages/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    listen 443 ssl;
    ssl_certificate /etc/letsencrypt/live/learning-copilot.ai-trends.io/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/learning-copilot.ai-trends.io/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
}

# Service E - WhatsApp Web API
server {
    server_name whatsapp-web-api.ai-trends.io;

    location / {
        proxy_pass http://localhost:8040;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;

	# CORS headers - allow both origins
    	set $cors_origin "";
    	if ($http_origin ~* "^https://preview--know-chat-hive\.lovable\.app$") {
            set $cors_origin "https://preview--know-chat-hive.lovable.app";
    	}
    	if ($http_origin ~* "^http://localhost:8081$") {
            set $cors_origin "http://localhost:8081";
    	}
	if ($http_origin ~* "^https://leon-liu-stickersmash\.expo\.app$") {
            set $cors_origin "https://leon-liu-stickersmash.expo.app";
        }

        # CORS headers
        add_header 'Access-Control-Allow-Origin' $cors_origin always;
	add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;

        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' $cors_origin always;
	    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }

    listen 443 ssl;
    ssl_certificate /etc/letsencrypt/live/whatsapp-web-api.ai-trends.io/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/whatsapp-web-api.ai-trends.io/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
}

# Service F - Stagehand (Proxy to Private EC2)
server {
    server_name stagehand.ai-trends.io;

    location / {
        proxy_pass http://172.31.39.131:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;

        # Timeout settings
        proxy_connect_timeout 120s;
        proxy_send_timeout 120s;
        proxy_read_timeout 120s;
    }

    listen 443 ssl;
    ssl_certificate /etc/letsencrypt/live/stagehand.ai-trends.io/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/stagehand.ai-trends.io/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
}

# Redirect HTTP to HTTPS for all subdomains
server {
    listen 80;
    server_name *.ai-trends.io;
    return 301 https://$host$request_uri;
}